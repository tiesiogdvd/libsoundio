name: Build Static libsoundio

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, x86]
        include:
        - arch: x64
          cmake_arch: x64
        - arch: x86
          cmake_arch: Win32
    steps:
    - uses: actions/checkout@v4
      with:
        repository: andrewrk/libsoundio
        ref: master

    - name: Configure and Build
      run: |
        mkdir build
        cd build
        cmake .. -A ${{ matrix.cmake_arch }} -DCMAKE_BUILD_TYPE=Release -DBUILD_STATIC_LIBS=ON -DBUILD_DYNAMIC_LIBS=OFF -DBUILD_EXAMPLE_PROGRAMS=OFF -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=install
        cmake --build . --config Release
        cmake --install . --config Release

    - name: Package
      run: |
        cd build/install
        7z a ../../libsoundio-windows-${{ matrix.arch }}.zip *

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: libsoundio-windows-${{ matrix.arch }}
        path: libsoundio-windows-${{ matrix.arch }}.zip

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
    - uses: actions/checkout@v4
      with:
        repository: andrewrk/libsoundio
        ref: master

    - name: Install deps
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake libasound2-dev libpulse-dev libjack-jackd2-dev
        if [ "${{ matrix.arch }}" = "aarch64" ]; then
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
        fi

    - name: Configure and Build
      run: |
        mkdir build
        cd build
        if [ "${{ matrix.arch }}" = "aarch64" ]; then
          cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_STATIC_LIBS=ON -DBUILD_DYNAMIC_LIBS=OFF -DBUILD_EXAMPLE_PROGRAMS=OFF -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=install -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++
        else
          cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_STATIC_LIBS=ON -DBUILD_DYNAMIC_LIBS=OFF -DBUILD_EXAMPLE_PROGRAMS=OFF -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=install
        fi
        make -j$(nproc)
        make install

    - name: Package
      run: |
        cd build/install
        tar -czf ../../libsoundio-linux-${{ matrix.arch }}.tar.gz .

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: libsoundio-linux-${{ matrix.arch }}
        path: libsoundio-linux-${{ matrix.arch }}.tar.gz

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]
    steps:
    - uses: actions/checkout@v4
      with:
        repository: andrewrk/libsoundio
        ref: master

    - name: Configure and Build
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_STATIC_LIBS=ON -DBUILD_DYNAMIC_LIBS=OFF -DBUILD_EXAMPLE_PROGRAMS=OFF -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=install -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }}
        make -j$(sysctl -n hw.ncpu)
        make install

    - name: Package
      run: |
        cd build/install
        tar -czf ../../libsoundio-macos-${{ matrix.arch }}.tar.gz .

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: libsoundio-macos-${{ matrix.arch }}
        path: libsoundio-macos-${{ matrix.arch }}.tar.gz
